/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;

public class AppTest {
    @Test void linterTest() throws IOException {
        Path testNoErrors = Paths.get("src/test/resources/noErrors.js");

        String errors = App.linter(testNoErrors);

        String expectedErrors = "There are errors on lines: ";

        assertEquals(expectedErrors, errors);


    }

    @Test void linterTestTwo() throws IOException {
        Path testOneError = Paths.get("src/test/resources/oneError.js");

        String errors = App.linter(testOneError);
        String expectedErrors = "There are errors on lines: \n9";

        assertEquals(expectedErrors, errors);
    }

    @Test void linterTestThree() throws IOException {
        Path testFewErrors = Paths.get("src/test/resources/fewErrors.js");

        String errors = App.linter(testFewErrors);
        String expectedErrors = "There are errors on lines: \n2\n9\n12";

        assertEquals(expectedErrors, errors);
    }

    @Test void linterTestFour() throws IOException {
        Path testManyErrors = Paths.get("src/test/resources/manyErrors.js");

        String errors = App.linter(testManyErrors);
        String expectedErrors = "There are errors on lines: \n1\n2\n3\n4\n5\n6\n7\n8\n9\n10";

        assertEquals(expectedErrors, errors);
    }

    @Test void linterTestFive() throws IOException {
        Path testManyErrors = Paths.get("src/test/resources/emptyFile.js");

        String errors = App.linter(testManyErrors);
        String expectedErrors = "There are errors on lines: ";

        assertEquals(expectedErrors, errors);
    }

}